<Window x:Class="AutoEncodeClient.Views.AutoEncodeClientView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AutoEncodeClient.Views"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:converters="clr-namespace:AutoEncodeClient.Converters"
        xmlns:designData="clr-namespace:AutoEncodeClient.Views.DesignData"
        xmlns:utilData="clr-namespace:AutoEncodeUtilities.Data;assembly=AutoEncodeUtilities"
        xmlns:utilEnums="clr-namespace:AutoEncodeUtilities.Enums;assembly=AutoEncodeUtilities"
        mc:Ignorable="d"
        Icon="../Resources/AutoEncode.ico"
        Height="500" Width="800"
        Background="LightSlateGray"
        Closed="Window_Closed"
        d:Title="AutoEncodeClient"
        d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True, Type=designData:AutoEncodeClientDesignData}">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/Styles.xaml"/>
                <ResourceDictionary Source="../Resources/Brushes.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <converters:EncodedColorConverter x:Key="EncodedColorConverter"/>
            <converters:EnumDisplayNameConverter x:Key="EnumDisplayNameConverter"/>
            <converters:EnumDisplayShortNameConverter x:Key="EnumDisplayShortNameConverter"/>
            <converters:EnumDisplayDescriptionConverter x:Key="EnumDisplayDescriptionConverter"/>
            <converters:EncodingJobStatusToVisibilityConverter x:Key="EncodingJobStatusToVisibilityConverter"/>
            <converters:IsNullVisibilityConverter x:Key="IsNullVisibilityConverter"/>
            <converters:VisibleWhenGreaterThanConverter x:Key="VisibleWhenGreaterThanConverter" />
            <converters:FormatTimeSpanConverter x:Key="FormatTimeSpanConverter"/>
            <converters:SecondsToTimestampConverter x:Key="SecondsToTimestampConverter" />
            <converters:IsNotNullVisibilityConverter x:Key="IsNotNullVisibilityConverter"/>
            <converters:FlagToNamesConverter x:Key="FlagToNamesConverter" />
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"
                              MaxWidth="600"/>
            <ColumnDefinition Width="6*"
                              MinWidth="140"/>
        </Grid.ColumnDefinitions>

        <!-- SOURCE FILES -->
        <Border Grid.Column="0"
                Margin="0,0,5,0"
                BorderBrush="Black"
                Background="{StaticResource BackgroundBrush}"
                CornerRadius="0,2,2,0"
                BorderThickness="1.5">
            <Expander Grid.Column="0"
                      Style="{StaticResource ExpanderStyle}"
                      ExpandDirection="Right"
                      MaxWidth="600">
                <Expander.Header>
                    <DockPanel Height="30">
                        <TextBlock Text="SOURCE FILES"
                                   FontWeight="DemiBold"
                                   VerticalAlignment="Center"
                                   IsHitTestVisible="False"/>
                        <Button Command="{Binding RefreshSourceFilesCommand}"
                                ToolTip="Click to Refresh Source Files"
                                Margin="2">
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Border BorderThickness="1"
                                            BorderBrush="Black"
                                            CornerRadius="2"
                                            Padding="2"
                                            Margin="10,0,0,0">
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal">
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="btnRefreshImageRotation"
                                                                         Storyboard.TargetProperty="Angle"
                                                                         To="0" Duration="0"/>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="btnRefreshImageRotation"
                                                                         Storyboard.TargetProperty="Angle"
                                                                         To="90" Duration="0"/>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Image Source="../Resources/refresh.png"
                                               RenderTransformOrigin="0.5,0.5">
                                            <Image.RenderTransform>
                                                <RotateTransform x:Name="btnRefreshImageRotation" Angle="0"/>
                                            </Image.RenderTransform>
                                        </Image>
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Setter Property="Background"
                                                        Value="{StaticResource ButtonBackgroundBrush}"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver"
                                                             Value="True">
                                                        <Setter Property="Background"
                                                                Value="{StaticResource MouseOverBrush}"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                    </Border>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                        <DockPanel.LayoutTransform>
                            <RotateTransform Angle="270"/>
                        </DockPanel.LayoutTransform>
                    </DockPanel>
                </Expander.Header>
                <ScrollViewer VerticalScrollBarVisibility="Auto"
                              CanContentScroll="False"
                              PreviewMouseWheel="ScrollViewer_PreviewMouseWheel">
                    <Grid>
                        <Grid.Resources>
                            <Style x:Key="LibraryHeaderBorder"
                                   TargetType="Border">
                                <Setter Property="BorderBrush"
                                        Value="Gray"/>
                                <Setter Property="BorderThickness"
                                        Value="0,0,0,1"/>
                                <Setter Property="Background"
                                        Value="WhiteSmoke"/>
                                <Setter Property="HorizontalAlignment"
                                        Value="Stretch"/>
                            </Style>
                            <Style x:Key="LibraryHeaderText"
                                   TargetType="TextBlock">
                                <Setter Property="HorizontalAlignment"
                                        Value="Center"/>
                                <Setter Property="VerticalAlignment"
                                        Value="Center"/>
                                <Setter Property="Padding"
                                        Value="2,0"/>
                                <Setter Property="FontWeight"
                                        Value="SemiBold"/>
                            </Style>
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Border Grid.Row="0"
                                Style="{StaticResource LibraryHeaderBorder}"
                                Visibility="{Binding MovieSourceFiles.Count, Converter={StaticResource VisibleWhenGreaterThanConverter}, ConverterParameter=0}">
                            <TextBlock Text="Movie Libraries"
                                       Style="{StaticResource LibraryHeaderText}"/>
                        </Border>
                        <TreeView Grid.Row="1"
                                  Margin="0,0,5,0"
                                  Style="{StaticResource TreeViewStyle}"
                                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                  ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                  ItemsSource="{Binding MovieSourceFiles}"
                                  Visibility="{Binding MovieSourceFiles.Count, Converter={StaticResource VisibleWhenGreaterThanConverter}, ConverterParameter=0}">
                            <TreeView.ItemTemplate>
                                <HierarchicalDataTemplate ItemsSource="{Binding Value}">
                                    <TextBlock Text="{Binding Key}"/>
                                    <HierarchicalDataTemplate.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding FileName}"
                                                       Foreground="{Binding Encoded, Converter={StaticResource EncodedColorConverter}}"/>
                                        </DataTemplate>
                                    </HierarchicalDataTemplate.ItemTemplate>
                                </HierarchicalDataTemplate>
                            </TreeView.ItemTemplate>
                        </TreeView>

                        <Border Grid.Row="2"
                                Visibility="{Binding ShowSourceFiles.Count, Converter={StaticResource VisibleWhenGreaterThanConverter}, ConverterParameter=0}">
                            <Border.Style>
                                <Style TargetType="Border"
                                       BasedOn="{StaticResource LibraryHeaderBorder}">
                                    <Setter Property="BorderThickness"
                                            Value="0,1,0,1"/>
                                </Style>
                            </Border.Style>
                            <TextBlock Text="Show Libraries"
                                   Style="{StaticResource LibraryHeaderText}"/>
                        </Border>
                        <TreeView Grid.Row="3"
                                  Margin="0,0,5,0"
                                  Style="{StaticResource TreeViewStyle}"
                                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                  ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                  ItemsSource="{Binding ShowSourceFiles}"
                                  Visibility="{Binding ShowSourceFiles.Count, Converter={StaticResource VisibleWhenGreaterThanConverter}, ConverterParameter=0}">
                            <TreeView.ItemTemplate>
                                <HierarchicalDataTemplate ItemsSource="{Binding Value}">
                                    <TextBlock Text="{Binding Key}"/>
                                    <HierarchicalDataTemplate.ItemTemplate>
                                        <HierarchicalDataTemplate ItemsSource="{Binding Seasons}">
                                            <TextBlock Text="{Binding ShowName}"/>
                                            <HierarchicalDataTemplate.ItemTemplate>
                                                <HierarchicalDataTemplate ItemsSource="{Binding Episodes}">
                                                    <TextBlock Text="{Binding Season}"/>
                                                    <HierarchicalDataTemplate.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding FileName}"
                                                               Foreground="{Binding Encoded, Converter={StaticResource EncodedColorConverter}}"/>
                                                        </DataTemplate>
                                                    </HierarchicalDataTemplate.ItemTemplate>
                                                </HierarchicalDataTemplate>
                                            </HierarchicalDataTemplate.ItemTemplate>
                                        </HierarchicalDataTemplate>
                                    </HierarchicalDataTemplate.ItemTemplate>
                                </HierarchicalDataTemplate>
                            </TreeView.ItemTemplate>
                        </TreeView>
                    </Grid>
                </ScrollViewer>
            </Expander>
        </Border>
 
        <Grid Grid.Column="1"
              Margin="0,2,2,2">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"
                               MaxHeight="150"/>
                <RowDefinition Height="2.75*"/>
            </Grid.RowDefinitions>

            <!-- ENCODING JOBS QUEUE -->
            <Border Grid.Row="0"
                    BorderBrush="Black"
                    BorderThickness="2"
                    CornerRadius="5"
                    Padding="2"
                    Background="LightGray">
                <Grid>
                    <ListView Grid.Row="0"
                              ItemsSource="{Binding EncodingJobs}"
                              SelectedItem="{Binding SelectedEncodingJobViewModel, Mode=TwoWay}"
                              ItemContainerStyle="{StaticResource ListViewItemContainerStyle}"
                              Visibility="{Binding EncodingJobs.Count, Converter={StaticResource VisibleWhenGreaterThanConverter}, ConverterParameter=0}"
                              VerticalAlignment="Stretch"
                              HorizontalAlignment="Stretch"
                              VerticalContentAlignment="Stretch"
                              SelectionMode="Single"
                              Background="{StaticResource BackgroundBrush}"
                              BorderBrush="Transparent"
                              BorderThickness="0">
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                    </ListView>
                    <TextBlock Text="Encoding Job Queue Is Empty"
                               Foreground="Gray"
                               FontSize="24"
                               FontWeight="DemiBold"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="VirtualizingPanel.Visibility"
                                        Value="Hidden"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding EncodingJobs.Count}"
                                                 Value="0">
                                        <Setter Property="Visibility"
                                                Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
            </Border>
            
            <!-- SELECTED ENCODING JOB -->
            <Border Grid.Row="1"
                    BorderBrush="Black"
                    BorderThickness="2"
                    CornerRadius="5"
                    Margin="0,5,0,0"
                    Padding="5,2"
                    Background="{StaticResource BackgroundBrush}"
                    DataContext="{Binding SelectedEncodingJobViewModel}"
                    Visibility="{Binding DataContext, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource IsNullVisibilityConverter}}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="14*"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <!-- Main Info -->
                        <StackPanel Grid.Column="0"
                                    Orientation="Vertical">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Column="0"
                                           Text="{Binding Name}"
                                           FontSize="14"
                                           FontWeight="DemiBold"/>
                                <StackPanel Grid.Column="1"
                                            Margin="5,0"
                                            Orientation="Horizontal">
                                    <Button Command="{Binding CancelCommand}"
                                            Height="20"
                                            Margin="5,0"
                                            ToolTip="Cancel">
                                        <Button.Template>
                                            <ControlTemplate TargetType="Button">
                                                <Border BorderBrush="Black"
                                                        BorderThickness="1"
                                                        CornerRadius="2">
                                                    <Image Source="../Resources/cancel.png"/>
                                                    <Border.Style>
                                                        <Style TargetType="Border">
                                                            <Setter Property="Background"
                                                                    Value="{StaticResource ButtonBackgroundBrush}"/>
                                                            <Style.Triggers>
                                                                <Trigger Property="IsMouseOver"
                                                                         Value="True">
                                                                    <Setter Property="Background"
                                                                            Value="{StaticResource MouseOverBrush}"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled"
                                                                         Value="False">
                                                                    <Setter Property="Background"
                                                                            Value="Transparent"/>
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                </Border>
                                            </ControlTemplate>
                                        </Button.Template>
                                        <Button.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="Cancel Then Pause"
                                                          Command="{Binding CancelThenPauseCommand}"
                                                          ToolTip="Cancels Then Immediately Pauses The Job"/>
                                            </ContextMenu>
                                        </Button.ContextMenu>
                                    </Button>
                                    <Button Height="20"
                                            Padding="5,0">
                                        <Button.Style>
                                            <Style TargetType="Button">
                                                <Setter Property="Command"
                                                        Value="{Binding PauseCommand}"/>
                                                <Setter Property="ToolTip"
                                                        Value="Pause"/>
                                                <Setter Property="IsEnabled"
                                                        Value="True"/>
                                                <Style.Triggers>

                                                    <DataTrigger Binding="{Binding Paused}"
                                                                 Value="True">
                                                        <Setter Property="Command"
                                                                Value="{Binding ResumeCommand}"/>
                                                        <Setter Property="ToolTip"
                                                                Value="Resume"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                        <Button.Template>
                                            <ControlTemplate TargetType="Button">
                                                <Border BorderBrush="Black"
                                                        BorderThickness="1"
                                                        CornerRadius="2">
                                                    <Image>
                                                        <Image.Style>
                                                            <Style TargetType="Image">
                                                                <Setter Property="Source"
                                                                        Value="../Resources/pause.png"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Paused}"
                                                                                 Value="True">
                                                                        <Setter Property="Source"
                                                                                Value="../Resources/play.png"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Image.Style>
                                                    </Image>
                                                    <Border.Style>
                                                        <Style TargetType="Border">
                                                            <Setter Property="Background"
                                                                    Value="{StaticResource ButtonBackgroundBrush}"/>
                                                            <Style.Triggers>
                                                                <Trigger Property="IsMouseOver"
                                                                         Value="True">
                                                                    <Setter Property="Background"
                                                                            Value="{StaticResource MouseOverBrush}"/>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled"
                                                                         Value="False">
                                                                    <Setter Property="Background"
                                                                            Value="Transparent"/>
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                </Border>
                                            </ControlTemplate>
                                        </Button.Template>
                                    </Button>
                                </StackPanel>
                            </Grid>
                            <TextBlock TextWrapping="NoWrap">
                                <TextBlock.Inlines>
                                    <Run Text="ID:" FontWeight="DemiBold"/>
                                    <Run Text="{Binding Id, Mode=OneWay}"/>
                                </TextBlock.Inlines>
                            </TextBlock>
                            <TextBlock TextWrapping="Wrap">
                                <TextBlock.Inlines>
                                    <Run Text="Source Full Path:" FontWeight="DemiBold"/>
                                    <Run Text="{Binding SourceFullPath, Mode=OneWay}"/>
                                </TextBlock.Inlines>
                            </TextBlock>
                            <TextBlock TextWrapping="Wrap">
                                <TextBlock.Inlines>
                                    <Run Text="Destination Full Path:" FontWeight="DemiBold"/>
                                    <Run Text="{Binding DestinationFullPath, Mode=OneWay}"/>
                                </TextBlock.Inlines>
                            </TextBlock>
                        </StackPanel>

                        <!-- Error/Success/Paused Image -->
                        <Image Grid.Column="1"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Left"
                               Margin="0,0,10,0">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Setter Property="Visibility"
                                            Value="Hidden"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Error}"
                                                     Value="True">
                                            <Setter Property="Visibility"
                                                    Value="Visible"/>
                                            <Setter Property="Source"
                                                    Value="../Resources/error.png"/>
                                            <Setter Property="ToolTip"
                                                    Value="Encoding Job has errored."/>
                                        </DataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Error}" Value="False"/>
                                                <Condition Binding="{Binding Complete}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Visibility"
                                                    Value="Visible"/>
                                            <Setter Property="Source"
                                                    Value="../Resources/success.png"/>
                                            <Setter Property="ToolTip"
                                                    Value="Encoding Job has successfully completed."/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Error}" Value="False"/>
                                                <Condition Binding="{Binding Complete}" Value="False"/>
                                                <Condition Binding="{Binding Paused}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Visibility"
                                                    Value="Visible"/>
                                            <Setter Property="Source"
                                                    Value="../Resources/pause.png"/>
                                            <Setter Property="ToolTip"
                                                    Value="Encoding Job is currently paused."/>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Grid>

                    <!-- Encoding Progress Bar -->
                    <Grid Grid.Row="1">
                        <TextBlock FontSize="12"
                                   FontWeight="Bold"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Panel.ZIndex="1">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Text"
                                            Value="{Binding Status, Converter={StaticResource EnumDisplayShortNameConverter}}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=Status}"
                                                     Value="{x:Static utilEnums:EncodingJobStatus.BUILDING}">
                                            <Setter Property="Text">
                                                <Setter.Value>
                                                    <MultiBinding StringFormat="{}{0} ({1})">
                                                        <Binding Path="Status" Converter="{StaticResource EnumDisplayShortNameConverter}"/>
                                                        <Binding Path="BuildingStatus" Converter="{StaticResource EnumDisplayDescriptionConverter}"/>
                                                    </MultiBinding>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=Status}"
                                                     Value="{x:Static utilEnums:EncodingJobStatus.ENCODING}">
                                            <Setter Property="Text">
                                                <Setter.Value>
                                                    <MultiBinding StringFormat="{}{0} ({1}%)">
                                                        <Binding Path="Status" Converter="{StaticResource EnumDisplayShortNameConverter}"/>
                                                        <Binding Path="EncodingProgress"/>
                                                    </MultiBinding>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <ProgressBar Value="{Binding EncodingProgress}"
                                     Height="25"
                                     Margin="10,5"
                                     BorderThickness="1.5">
                            <ProgressBar.Style>
                                <Style TargetType="ProgressBar"
                                       BasedOn="{StaticResource ProgressBarBaseStyle}">
                                    <Setter Property="IsIndeterminate"
                                            Value="False"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Status}"
                                                     Value="{x:Static utilEnums:EncodingJobStatus.BUILDING}">
                                            <Setter Property="IsIndeterminate"
                                                    Value="True"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Status}"
                                                     Value="{x:Static utilEnums:EncodingJobStatus.POST_PROCESSING}">
                                            <Setter Property="IsIndeterminate"
                                                    Value="True"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ProgressBar.Style>
                        </ProgressBar>
                    </Grid>

                    <!-- Encoding Completion -->
                    <StackPanel Grid.Row="2"
                                Orientation="Vertical">
                        <TextBlock TextWrapping="NoWrap">
                            <TextBlock.Inlines>
                                <Run Text="Encoding Time Elapsed:" FontWeight="DemiBold"/>
                                <Run Text="{Binding ElapsedEncodingTime, Converter={StaticResource FormatTimeSpanConverter}, TargetNullValue='-', FallbackValue={x:Static sys:String.Empty}}"/>
                            </TextBlock.Inlines>
                        </TextBlock>
                        <TextBlock TextWrapping="NoWrap">
                            <TextBlock.Inlines>
                                <Run Text="Encoding Completed:" FontWeight="DemiBold"/>
                                <Run Text="{Binding CompletedEncodingDateTime, TargetNullValue='-', FallbackValue={x:Static sys:String.Empty}}"/>
                            </TextBlock.Inlines>
                        </TextBlock>
                    </StackPanel>

                    <TabControl Grid.Row="3"
                                Margin="0,5,0,0">
                        <TabControl.Resources>
                            <Style x:Key="SourceDataBorder"
                                   TargetType="Border">
                                <Setter Property="BorderBrush"
                                        Value="Black"/>
                                <Setter Property="BorderThickness"
                                        Value="1.5"/>
                            </Style>
                        </TabControl.Resources>
                        <!-- Source Data Tab -->
                        <TabItem Header="Source Data">
                            <Grid DataContext="{Binding SourceStreamData}"
                                  Margin="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <StackPanel Grid.Row="0">
                                    <TextBlock>
                                        <TextBlock.Inlines>
                                            <Run Text="Duration:" FontWeight="DemiBold"/>
                                            <Run>
                                                <Run.Text>
                                                    <MultiBinding StringFormat="{}{0} ({1} seconds)">
                                                        <Binding Path="DurationInSeconds" 
                                                                 Converter="{StaticResource SecondsToTimestampConverter}" 
                                                                 TargetNullValue="-" 
                                                                 FallbackValue="-"/>
                                                        <Binding Path="DurationInSeconds" 
                                                                 TargetNullValue="-" 
                                                                 FallbackValue="-"/>
                                                    </MultiBinding>
                                                </Run.Text>
                                            </Run>
                                        </TextBlock.Inlines>
                                    </TextBlock>
                                    <TextBlock>
                                        <TextBlock.Inlines>
                                            <Run Text="Number of Frames:" FontWeight="DemiBold"/>
                                            <Run Text="{Binding NumberOfFrames, TargetNullValue='-',FallbackValue='-'}"/>
                                        </TextBlock.Inlines>
                                    </TextBlock>
                                </StackPanel>

                                <Grid Grid.Row="1"
                                      Margin="0,2,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <!-- Video -->
                                    <Border Grid.Column="0"
                                            Style="{StaticResource SourceDataBorder}"
                                            DataContext="{Binding VideoStream}">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>

                                            <Border Grid.Row="0"
                                                    BorderBrush="Black"
                                                    BorderThickness="0,0,0,1"
                                                    Background="LightGray">
                                                <TextBlock Grid.Row="0"
                                                           HorizontalAlignment="Center"
                                                           Text="VIDEO"
                                                           FontWeight="DemiBold"/>
                                            </Border>
                                            <TextBlock Grid.Row="1"
                                                       Text="No Source Video Data"
                                                       Foreground="Gray"
                                                       FontSize="20"
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center"
                                                       TextAlignment="Center"
                                                       TextWrapping="Wrap"
                                                       FontWeight="DemiBold"
                                                       Visibility="{Binding Converter={StaticResource IsNotNullVisibilityConverter}}"/>
                                            <ScrollViewer Grid.Row="1"
                                                          VerticalScrollBarVisibility="Auto">
                                                <StackPanel Visibility="{Binding Converter={StaticResource IsNullVisibilityConverter}}"
                                                            Margin="2,1,2,1">
                                                    <TextBlock>
                                                        <TextBlock.Inlines>
                                                            <Run Text="Stream Index: " FontWeight="DemiBold"/>
                                                            <Run Text="{Binding StreamIndex}"/>
                                                        </TextBlock.Inlines>
                                                    </TextBlock>
                                                    <TextBlock>
                                                        <TextBlock.Inlines>
                                                            <Run Text="Codec Name: " FontWeight="DemiBold"/>
                                                            <Run Text="{Binding CodecName}"/>
                                                        </TextBlock.Inlines>
                                                    </TextBlock>
                                                    <TextBlock>
                                                        <TextBlock.Inlines>
                                                            <Run Text="Pixel Format: " FontWeight="DemiBold"/>
                                                            <Run Text="{Binding PixelFormat}"/>
                                                        </TextBlock.Inlines>
                                                    </TextBlock>
                                                    <TextBlock>
                                                        <TextBlock.Inlines>
                                                            <Run Text="Resolution: " FontWeight="DemiBold"/>
                                                            <Run Text="{Binding Resolution}"/>
                                                        </TextBlock.Inlines>
                                                    </TextBlock>
                                                    <TextBlock>
                                                        <TextBlock.Inlines>
                                                            <Run Text="Color Space: " FontWeight="DemiBold"/>
                                                            <Run Text="{Binding ColorSpace}"/>
                                                        </TextBlock.Inlines>
                                                    </TextBlock>
                                                    <TextBlock>
                                                        <TextBlock.Inlines>
                                                            <Run Text="Color Primaries: " FontWeight="DemiBold"/>
                                                            <Run Text="{Binding ColorPrimaries}"/>
                                                        </TextBlock.Inlines>
                                                    </TextBlock>
                                                    <TextBlock>
                                                        <TextBlock.Inlines>
                                                            <Run Text="Color Transfer: " FontWeight="DemiBold"/>
                                                            <Run Text="{Binding ColorTransfer}"/>
                                                        </TextBlock.Inlines>
                                                    </TextBlock>
                                                    <TextBlock>
                                                        <TextBlock.Inlines>
                                                            <Run Text="Framerate: " FontWeight="DemiBold"/>
                                                            <Run Text="{Binding FrameRate}"/>
                                                        </TextBlock.Inlines>
                                                    </TextBlock>
                                                    <TextBlock>
                                                        <TextBlock.Inlines>
                                                            <Run Text="Scan Type: " FontWeight="DemiBold"/>
                                                            <Run Text="{Binding ScanType, Converter={StaticResource EnumDisplayNameConverter}}"/>
                                                        </TextBlock.Inlines>
                                                    </TextBlock>
                                                    <TextBlock>
                                                        <TextBlock.Inlines>
                                                            <Run Text="Chroma Location: " FontWeight="DemiBold"/>
                                                            <Run Text="{Binding ChromaLocation, Converter={StaticResource EnumDisplayNameConverter}}"/>
                                                        </TextBlock.Inlines>
                                                    </TextBlock>
                                                    <TextBlock>
                                                        <TextBlock.Inlines>
                                                            <Run Text="Crop: " FontWeight="DemiBold"/>
                                                            <Run Text="{Binding Crop, TargetNullValue='-'}"/>
                                                        </TextBlock.Inlines>
                                                    </TextBlock>
                                                    <TextBlock>
                                                        <TextBlock.Inlines>
                                                            <Run Text="Has HDR: " FontWeight="DemiBold"/>
                                                            <Run Text="{Binding HasHDR, Mode=OneWay}"/>
                                                        </TextBlock.Inlines>
                                                    </TextBlock>
                                                    <TextBlock>
                                                        <TextBlock.Inlines>
                                                            <Run Text="Has Dynamic HDR: " FontWeight="DemiBold"/>
                                                            <Run Text="{Binding HasDynamicHDR, Mode=OneWay}"/>
                                                        </TextBlock.Inlines>
                                                    </TextBlock>
                                                    <TextBlock Text="HDR Data:" FontWeight="DemiBold"
                                                               Visibility="{Binding HDRData, Converter={StaticResource IsNullVisibilityConverter}}"/>
                                                    <StackPanel DataContext="{Binding HDRData}"
                                                                Margin="10,0,0,0"
                                                                Visibility="{Binding ., Converter={StaticResource IsNullVisibilityConverter}}">
                                                        <StackPanel.Resources>
                                                            <Style TargetType="Ellipse">
                                                                <Setter Property="Stroke"
                                                                        Value="Black"/>
                                                                <Setter Property="Fill"
                                                                        Value="Black"/>
                                                                <Setter Property="Height"
                                                                        Value="4"/>
                                                                <Setter Property="Width"
                                                                        Value="4"/>
                                                            </Style>
                                                            <Style TargetType="TextBlock">
                                                                <Setter Property="HorizontalAlignment"
                                                                        Value="Left"/>
                                                                <Setter Property="Margin"
                                                                        Value="5,0,0,0"/>
                                                            </Style>
                                                        </StackPanel.Resources>
                                                        <BulletDecorator>
                                                            <BulletDecorator.Bullet>
                                                                <Ellipse/>
                                                            </BulletDecorator.Bullet>
                                                            <TextBlock Text="{Binding HDRFlags, Converter={StaticResource FlagToNamesConverter}}"/>
                                                        </BulletDecorator>
                                                        <BulletDecorator>
                                                            <BulletDecorator.Bullet>
                                                                <Ellipse/>
                                                            </BulletDecorator.Bullet>
                                                            <TextBlock Text="{Binding Red_X, StringFormat=Red X: {0}}"/>
                                                        </BulletDecorator>
                                                        <BulletDecorator>
                                                            <BulletDecorator.Bullet>
                                                                <Ellipse/>
                                                            </BulletDecorator.Bullet>
                                                            <TextBlock Text="{Binding Red_Y, StringFormat=Red Y: {0}}"/>
                                                        </BulletDecorator>
                                                        <BulletDecorator>
                                                            <BulletDecorator.Bullet>
                                                                <Ellipse/>
                                                            </BulletDecorator.Bullet>
                                                            <TextBlock Text="{Binding Blue_X, StringFormat=Blue X: {0}}"/>
                                                        </BulletDecorator>
                                                        <BulletDecorator>
                                                            <BulletDecorator.Bullet>
                                                                <Ellipse/>
                                                            </BulletDecorator.Bullet>
                                                            <TextBlock Text="{Binding Blue_Y, StringFormat=Blue Y: {0}}"/>
                                                        </BulletDecorator>
                                                        <BulletDecorator>
                                                            <BulletDecorator.Bullet>
                                                                <Ellipse/>
                                                            </BulletDecorator.Bullet>
                                                            <TextBlock Text="{Binding Green_X, StringFormat=Green X: {0}}"/>
                                                        </BulletDecorator>
                                                        <BulletDecorator>
                                                            <BulletDecorator.Bullet>
                                                                <Ellipse/>
                                                            </BulletDecorator.Bullet>
                                                            <TextBlock Text="{Binding Green_Y, StringFormat=Green Y: {0}}"/>
                                                        </BulletDecorator>
                                                        <BulletDecorator>
                                                            <BulletDecorator.Bullet>
                                                                <Ellipse/>
                                                            </BulletDecorator.Bullet>
                                                            <TextBlock Text="{Binding WhitePoint_X, StringFormat=Whitepoint X: {0}}"/>
                                                        </BulletDecorator>
                                                        <BulletDecorator>
                                                            <BulletDecorator.Bullet>
                                                                <Ellipse/>
                                                            </BulletDecorator.Bullet>
                                                            <TextBlock Text="{Binding WhitePoint_Y, StringFormat=Whitepoint Y: {0}}"/>
                                                        </BulletDecorator>
                                                        <BulletDecorator>
                                                            <BulletDecorator.Bullet>
                                                                <Ellipse/>
                                                            </BulletDecorator.Bullet>
                                                            <TextBlock Text="{Binding MinLuminance, StringFormat=Min Luminance: {0}}"/>
                                                        </BulletDecorator>
                                                        <BulletDecorator>
                                                            <BulletDecorator.Bullet>
                                                                <Ellipse/>
                                                            </BulletDecorator.Bullet>
                                                            <TextBlock Text="{Binding MaxLuminance, StringFormat=Max Luminance: {0}}"/>
                                                        </BulletDecorator>
                                                        <BulletDecorator>
                                                            <BulletDecorator.Bullet>
                                                                <Ellipse/>
                                                            </BulletDecorator.Bullet>
                                                            <TextBlock Text="{Binding MaxCLL, StringFormat=Max CLL: {0}}"/>
                                                        </BulletDecorator>
                                                    </StackPanel>
                                                </StackPanel>
                                            </ScrollViewer>
                                        </Grid>
                                    </Border>
                                    <!-- Audio -->
                                    <Border Grid.Column="1"
                                            Style="{StaticResource SourceDataBorder}"
                                            DataContext="{Binding AudioStreams}">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <Border Grid.Row="0"
                                                    BorderBrush="Black"
                                                    BorderThickness="0,0,0,1"
                                                    Background="LightGray">
                                                <TextBlock Grid.Row="0"
                                                           HorizontalAlignment="Center"
                                                           Text="AUDIO"
                                                           FontWeight="DemiBold"/>
                                            </Border>
                                            <TextBlock Grid.Row="1"
                                                       Text="No Source Audio Data"
                                                       Foreground="Gray"
                                                       FontSize="20"
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center"
                                                       TextAlignment="Center"
                                                       TextWrapping="Wrap"
                                                       FontWeight="DemiBold"
                                                       Visibility="{Binding Converter={StaticResource IsNotNullVisibilityConverter}}"/>
                                            <TreeView Grid.Row="1" ItemsSource="{Binding}"
                                                          ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                                          ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                          Style="{StaticResource TreeViewStyle}"
                                                          ItemTemplate="{StaticResource AudioSourceData}">
                                                <TreeView.ItemContainerStyle>
                                                    <Style TargetType="TreeViewItem">
                                                        <Setter Property="Focusable"
                                                                Value="False"/>
                                                    </Style>
                                                </TreeView.ItemContainerStyle>
                                            </TreeView>
                                        </Grid>
                                    </Border>
                                    <!-- Subtitle -->
                                    <Border Grid.Column="2"
                                            Style="{StaticResource SourceDataBorder}"
                                            DataContext="{Binding SubtitleStreams}">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <Border Grid.Row="0"
                                                    BorderBrush="Black"
                                                    BorderThickness="0,0,0,1"
                                                    Background="LightGray">
                                                <TextBlock Grid.Row="0"
                                                           HorizontalAlignment="Center"
                                                           Text="SUBTITLES"
                                                           FontWeight="DemiBold"/>
                                            </Border>

                                            <TextBlock Grid.Row="1"
                                                       Text="No Source Subtitle Data"
                                                       Foreground="Gray"
                                                       FontSize="20"
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center"
                                                       TextAlignment="Center"
                                                       TextWrapping="Wrap"
                                                       FontWeight="DemiBold"
                                                       Visibility="{Binding Converter={StaticResource IsNotNullVisibilityConverter}}"/>
                                            <TreeView Grid.Row="1" ItemsSource="{Binding}"
                                                          ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                                          ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                          Style="{StaticResource TreeViewStyle}"
                                                          ItemTemplate="{StaticResource SubtitleSourceData}">
                                                <TreeView.ItemContainerStyle>
                                                    <Style TargetType="TreeViewItem">
                                                        <Setter Property="Focusable"
                                                                Value="False"/>
                                                    </Style>
                                                </TreeView.ItemContainerStyle>
                                            </TreeView>
                                        </Grid>
                                    </Border>
                                </Grid>
                            </Grid>
                        </TabItem>
                        <!-- Error Tab -->
                        <TabItem>
                            <TabItem.Style>
                                <Style TargetType="TabItem">
                                    <Setter Property="Background"
                                            Value="Transparent"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Error}"
                                                     Value="True">
                                            <Setter Property="Background"
                                                    Value="{StaticResource ErrorBackgroundBrush}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TabItem.Style>
                            <TabItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Error"/>
                                    <Image Source="../Resources/error.png"
                                           Margin="3,0,0,0"
                                           Height="16"
                                           Visibility="{Binding Error, Converter={StaticResource BoolToVisibilityConverter}}"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"/>
                                </StackPanel>
                            </TabItem.Header>
                            <StackPanel Orientation="Vertical"
                                        Margin="2">
                                <TextBlock Text="{Binding ErrorTime, StringFormat=Error Occurred: {0}}"/>
                                <TextBlock Text="Last Error Message:"/>
                                <TextBlock Text="{Binding LastErrorMessage}"
                                           TextWrapping="Wrap"
                                           Padding="20,0"/>
                            </StackPanel>
                        </TabItem>
                    </TabControl>
                </Grid>
            </Border>
        </Grid>
    </Grid>
</Window>
