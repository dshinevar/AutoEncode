<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="SourceFileDataExpanderHeaderStyle"
           TargetType="TextBlock">
        <Setter Property="FontWeight"
                Value="DemiBold"/>
    </Style>

    <!--#region Source File Style / Template-->
    <ControlTemplate x:Key="SourceFileToggleButtonTemplate" 
                     TargetType="{x:Type ToggleButton}">
        <Border x:Name="Border"
                BorderBrush="Black"
                BorderThickness="0,0"
                CornerRadius="0,2,2,0"
                Background="LightGray">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                          Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0"
                                                     Value="White"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                          Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0"
                                                     Value="{StaticResource SideBarMouseOverColor}"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                          Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0"
                                                     Value="{StaticResource SideBarPressedColor}"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                           Storyboard.TargetName="CollapsedArrow">
                                <DiscreteObjectKeyFrame KeyTime="0"
                                                        Value="{x:Static Visibility.Hidden}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                           Storyboard.TargetName="ExpandedArrow">
                                <DiscreteObjectKeyFrame KeyTime="0"
                                                        Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked"/>
                    <VisualState x:Name="Indeterminate"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
                <Path x:Name="CollapsedArrow"
                      Margin="10,0"
                      HorizontalAlignment="Left"
                      VerticalAlignment="Center"
                      Fill="Black"
                      Visibility="Visible"
                      Data="M 0,0 L 0,12 6,6 Z"/>
                <Path x:Name="ExpandedArrow"
                      Margin="10,0"
                      HorizontalAlignment="Left"
                      VerticalAlignment="Center"
                      Visibility="Collapsed"
                      Fill="Black"
                      Data="M 0,0 L 12,0 6,6 Z"/>
            </Grid>
        </Border>
    </ControlTemplate>

    <Style x:Key="SourceFilesExpanderStyle"
           TargetType="Expander">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Border BorderBrush="Black"
                            BorderThickness="0,1">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"/>
                                <RowDefinition x:Name="ContentRow" 
                                               Height="0"/>
                            </Grid.RowDefinitions>

                            <Grid Grid.Row="0">
                                <ToggleButton VerticalAlignment="Stretch"
                                              HorizontalAlignment="Stretch"
                                              Template="{StaticResource SourceFileToggleButtonTemplate}"
                                              IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>

                                <ContentPresenter Margin="40,5"
                                                  ContentSource="Header"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Left"
                                                  RecognizesAccessKey="True"
                                                  IsHitTestVisible="False"
                                                  Panel.ZIndex="1"/>
                            </Grid>

                            <ContentPresenter x:Name="Content"
                                              Grid.Row="1"/>

                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded"
                                 Value="True">
                            <Setter TargetName="ContentRow"
                                    Property="Height"
                                    Value="{Binding Height, ElementName=Content}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsEnabled"
                Value="True"/>
    </Style>

    <ControlTemplate x:Key="ShowSeasonToggleButtonTemplate" 
                     TargetType="{x:Type ToggleButton}">
        <Border x:Name="Border"
                BorderBrush="Black"
                BorderThickness="0,0"
                CornerRadius="0,2,2,0"
                Background="{StaticResource BackgroundBrush}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                          Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0"
                                                     Value="White"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                          Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0"
                                                     Value="{StaticResource MouseOverColor}"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                          Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0"
                                                     Value="{StaticResource PressedColor}"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                           Storyboard.TargetName="CollapsedArrow">
                                <DiscreteObjectKeyFrame KeyTime="0"
                                                        Value="{x:Static Visibility.Hidden}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                           Storyboard.TargetName="ExpandedArrow">
                                <DiscreteObjectKeyFrame KeyTime="0"
                                                        Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked"/>
                    <VisualState x:Name="Indeterminate"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
                <Path x:Name="CollapsedArrow"
                      Margin="10,0"
                      HorizontalAlignment="Left"
                      VerticalAlignment="Center"
                      Fill="Black"
                      Visibility="Visible"
                      Data="M 0,0 L 0,12 6,6 Z"/>
                <Path x:Name="ExpandedArrow"
                      Margin="10,0"
                      HorizontalAlignment="Left"
                      VerticalAlignment="Center"
                      Visibility="Collapsed"
                      Fill="Black"
                      Data="M 0,0 L 12,0 6,6 Z"/>
            </Grid>
        </Border>
    </ControlTemplate>

    <Style x:Key="ShowSeasonExpanderStyle"
           TargetType="Expander">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Border BorderBrush="Black"
                            BorderThickness="0">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition x:Name="ContentRow" 
                                               Height="0"/>
                            </Grid.RowDefinitions>

                            <Grid Grid.Row="0">
                                <ToggleButton VerticalAlignment="Stretch"
                                              HorizontalAlignment="Stretch"
                                              Template="{StaticResource ShowSeasonToggleButtonTemplate}"
                                              IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>

                                <ContentPresenter Margin="40,5"
                                                  ContentSource="Header"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Left"
                                                  RecognizesAccessKey="True"
                                                  IsHitTestVisible="False"
                                                  Panel.ZIndex="1"/>
                            </Grid>

                            <ContentPresenter x:Name="Content"
                                              Grid.Row="1"/>

                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded"
                                 Value="True">
                            <Setter TargetName="ContentRow"
                                    Property="Height"
                                    Value="{Binding Height, ElementName=Content}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsEnabled"
                Value="True"/>
    </Style>

    <!--#endregion Source File Style / Template-->

    <!--#region Side Bar Style / Template -->
    <ControlTemplate x:Key="SideBarToggleButtonTemplate" 
                     TargetType="{x:Type ToggleButton}">
        <Border x:Name="Border"
                BorderBrush="Black"
                BorderThickness="0,0"
                CornerRadius="0,2,2,0"
                Background="LightGray">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                          Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0"
                                                     Value="White"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                          Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0"
                                                     Value="{StaticResource SideBarMouseOverColor}"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                          Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0"
                                                     Value="{StaticResource SideBarPressedColor}"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                           Storyboard.TargetName="CollapsedArrow">
                                <DiscreteObjectKeyFrame KeyTime="0"
                                                        Value="{x:Static Visibility.Hidden}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                           Storyboard.TargetName="ExpandedArrow">
                                <DiscreteObjectKeyFrame KeyTime="0"
                                                        Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked"/>
                    <VisualState x:Name="Indeterminate"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
                <Path x:Name="CollapsedArrow"
                      Margin="10,0"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Fill="Black"
                      Visibility="Visible"
                      Data="M 0,0 L 0,12 6,6 Z"/>
                <Path x:Name="ExpandedArrow"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Visibility="Collapsed"
                      Fill="Black"
                      Data="M 6,0 L 6,12 0,6 Z"/>
            </Grid>
        </Border>
    </ControlTemplate>

    <Style x:Key="SourceFilesSideBarExpanderStyle"
           TargetType="Expander">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ContentColumn" 
                                              Width="0"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <ContentPresenter x:Name="Content"
                                          Grid.Column="0"/>

                        <Grid Grid.Column="1">
                            <ContentPresenter Margin="1,1,1,0"
                                              ContentSource="Header"
                                              VerticalAlignment="Top"
                                              RecognizesAccessKey="True"
                                              Panel.ZIndex="1"/>

                            <ToggleButton VerticalAlignment="Stretch"
                                          HorizontalAlignment="Stretch"
                                          Template="{StaticResource SideBarToggleButtonTemplate}"
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Grid>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded"
                                 Value="True">
                            <Setter TargetName="ContentColumn"
                                    Property="Width"
                                    Value="{Binding Width, ElementName=Content}"/>
                            <Setter TargetName="ContentColumn"
                                    Property="MinWidth"
                                    Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsEnabled"
                Value="True"/>
    </Style>
    
    <!--#endregion Side Bar Style / Template -->
</ResourceDictionary>