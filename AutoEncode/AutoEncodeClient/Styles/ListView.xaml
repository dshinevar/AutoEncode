<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:utilData="clr-namespace:AutoEncodeUtilities.Data;assembly=AutoEncodeUtilities"
                    xmlns:utilEnum="clr-namespace:AutoEncodeUtilities.Enums;assembly=AutoEncodeUtilities"
                    xmlns:views="clr-namespace:AutoEncodeClient.Views">

    <!-- Encoding Queue Job Item Style -->
    <Style x:Key="EncodingQueueJobListViewItemStyle" 
           TargetType="ListViewItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border Background="{TemplateBinding Background}"
                            Padding="4"
                            Margin="1">
                        <Border BorderBrush="Black"        
                                BorderThickness="1"
                                CornerRadius="5"
                                Width="125"
                                VerticalAlignment="Stretch"
                                HorizontalAlignment="Stretch"
                                Padding="4,1">
                            <Border.Background>
                                <SolidColorBrush Color="LightGray" Opacity="0.4"/>
                            </Border.Background>
                            <Grid MaxHeight="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Border}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition MinHeight="10"/>
                                    <RowDefinition Height="2*"/>
                                    <RowDefinition MinHeight="10"
                                                   Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid Grid.Row="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="2*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0"
                                               HorizontalAlignment="Left"
                                               VerticalAlignment="Top"
                                               Text="{Binding Id, StringFormat=ID: {0}}"/>
                                    <TextBlock Grid.Column="1"
                                               HorizontalAlignment="Right"
                                               VerticalAlignment="Top"
                                               Text="{Binding Status, Converter={StaticResource EnumDisplayNameConverter}}"/>
                                </Grid>
                                <TextBlock Grid.Row="1"
                                           Text="{Binding Name}"
                                           TextWrapping="WrapWithOverflow"
                                           TextTrimming="CharacterEllipsis"
                                           VerticalAlignment="Top"
                                           HorizontalAlignment="Center"/>
                                <ProgressBar Grid.Row="2"
                                             Value="{Binding EncodingProgress, Mode=OneWay}"
                                             Style="{StaticResource ProgressBarBaseStyle}"
                                             VerticalAlignment="Stretch"
                                             Margin="5,3">
                                    <ProgressBar.Visibility>
                                        <MultiBinding Converter="{StaticResource MultiVisibilityConverter}">
                                            <Binding Path="HasError" Converter="{StaticResource BoolToInvisibilityConverter}"/>
                                            <Binding Path="Status" Converter="{StaticResource EncodingJobStatusToVisibilityConverter}"/>
                                            <Binding Path="Complete" Converter="{StaticResource BoolToInvisibilityConverter}"/>
                                        </MultiBinding>
                                    </ProgressBar.Visibility>
                                </ProgressBar>
                                <Image x:Name="StatusImage"
                                       Grid.Row="2"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Top"
                                       Style="{StaticResource EncodingJobQueueItemImageStyle}">
                                    <Image.RenderTransform>
                                        <RotateTransform Angle="0" CenterX="0" CenterY="0"/>
                                    </Image.RenderTransform>
                                </Image>
                            </Grid>
                        </Border>
                    </Border>

                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding HasError}" Value="False"/>
                                <Condition Binding="{Binding Complete}" Value="False"/>
                                <Condition Binding="{Binding Paused}" Value="False"/>
                                <Condition Binding="{Binding Status}" Value="{x:Static utilEnum:EncodingJobStatus.BUILDING}"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Name="StatusImageRotateStoryboard">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="(Image.RenderTransform).(RotateTransform.Angle)"
                                                         Storyboard.TargetName="StatusImage"
                                                         From="0"
                                                         To="360"
                                                         Duration="0:0:3"
                                                         RepeatBehavior="Forever"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="StatusImageRotateStoryboard"/>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding HasError}" Value="True"/>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
                                    Value="{StaticResource ErrorBackgroundBrush}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding HasError}" Value="True"/>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
                                    Value="{StaticResource ErrorMouseOverBackgroundBrush}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding HasError}" Value="False"/>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
                                    Value="{StaticResource HighlightBrush}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding HasError}" Value="False"/>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
                                    Value="{StaticResource MouseOverBrush}"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Source File List View Item Container Style -->
    <Style x:Key="SourceFileListViewItemContainerStyle"
           TargetType="ListViewItem">
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch"/>
        <Setter Property="VerticalContentAlignment"
                Value="Stretch"/>
        <Setter Property="MinHeight"
                Value="30"/>
        <Setter Property="MaxHeight"
                Value="60"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border x:Name="Border" 
                            Background="Transparent"
                            BorderThickness="0">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                      Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                      Value="{StaticResource MouseOverColor}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                      Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource PressedColor}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                      Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" 
                                                                 Value="{StaticResource SelectedSourceFileColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                      Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" 
                                                                 Value="{StaticResource SelectedSourceFileColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="SourceFileListViewItemTemplate"
                  DataType="utilData:SourceFileData">
        <Grid Margin="10,5"
              VerticalAlignment="Center"
              ToolTip="{Binding FileName}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0"
                       Text="{Binding FileName}"
                       FontWeight="DemiBold"
                       Foreground="{Binding Encoded, Converter={StaticResource EncodedColorConverter}}"
                       TextAlignment="Left"
                       TextWrapping="Wrap"
                       VerticalAlignment="Center"
                       Margin="0,0,10,0"/>
            <Button Grid.Column="1"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Command="{Binding DataContext.RequestEncodeCommand, ElementName=SourceFilesRoot}"
                    CommandParameter="{Binding .}"
                    Visibility="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType=ListViewItem}, Converter={StaticResource BoolToVisibilityConverter}}"
                    ToolTip="Request Encode">
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Border BorderBrush="Black"
                                BorderThickness="1"
                                CornerRadius="2">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="Background"
                                            Value="{StaticResource ButtonBackgroundBrush}"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver"
                                                 Value="True">
                                            <Setter Property="Background"
                                                    Value="{StaticResource MouseOverBrush}"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled"
                                                 Value="False">
                                            <Setter Property="Background"
                                                    Value="Transparent"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Image Source="../Resources/plus_sign.png"
                                   Height="20"
                                   Width="20"/>
                        </Border>
                    </ControlTemplate>
                </Button.Template>
            </Button>
        </Grid>
    </DataTemplate>

</ResourceDictionary>