<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:utilData="clr-namespace:AutoEncodeUtilities.Data;assembly=AutoEncodeUtilities"
                    xmlns:utilEnum="clr-namespace:AutoEncodeUtilities.Enums;assembly=AutoEncodeUtilities"
                    xmlns:sourceFile="clr-namespace:AutoEncodeClient.ViewModels.SourceFile"
                    xmlns:vm="clr-namespace:AutoEncodeClient.ViewModels"
                    xmlns:views="clr-namespace:AutoEncodeClient.Views">

    <!-- Encoding Queue Job Item Style -->
    <Style x:Key="EncodingQueueJobListViewItemStyle" 
           TargetType="ListViewItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="5"
                            Padding="4"
                            Margin="1">
                        <Border.ToolTip>
                            <ToolTip Placement="Bottom"
                                     Content="Click for details"/>
                        </Border.ToolTip>
                        <Border BorderBrush="{StaticResource SecondaryBackgroundBrush}"        
                                BorderThickness="1"
                                CornerRadius="5"
                                Width="125"
                                VerticalAlignment="Stretch"
                                HorizontalAlignment="Stretch">
                            <Border.Background>
                                <SolidColorBrush Color="{StaticResource SecondaryBackgroundColor}" Opacity="0.4"/>
                            </Border.Background>
                            <Grid>
                                <Border BorderThickness="0,1"
                                        BorderBrush="Black"
                                        CornerRadius="5">
                                    <Border.Effect>
                                        <BlurEffect Radius="2" KernelType="Gaussian"/>
                                    </Border.Effect>
                                </Border>
                                <Border BorderThickness="1,0"
                                        BorderBrush="White"
                                        CornerRadius="5"
                                        Margin="2"
                                        Opacity="0.7">
                                    <Border.Effect>
                                        <BlurEffect Radius="2" KernelType="Gaussian"/>
                                    </Border.Effect>
                                </Border>
                                <Grid MaxHeight="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Border}}"
                                      Margin="5,2">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="25"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="25"/>
                                    </Grid.RowDefinitions>
                                    <Grid Grid.Row="0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="2*"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0"
                                                   HorizontalAlignment="Left"
                                                   VerticalAlignment="Top"
                                                   FontWeight="DemiBold"
                                                   Text="{Binding Id}"/>
                                        <TextBlock Grid.Column="1"
                                                   HorizontalAlignment="Right"
                                                   VerticalAlignment="Top"
                                                   FontWeight="DemiBold"
                                                   Text="{Binding Status, Converter={StaticResource EnumDisplayNameConverter}}"/>
                                    </Grid>
                                    <TextBlock Grid.Row="1"
                                               Text="{Binding Name}"
                                               TextWrapping="WrapWithOverflow"
                                               TextTrimming="CharacterEllipsis"
                                               VerticalAlignment="Top"
                                               FontWeight="DemiBold"
                                               HorizontalAlignment="Center"/>
                                    <ProgressBar Grid.Row="2"
                                                 Value="{Binding EncodingProgress, Mode=OneWay}"
                                                 Style="{StaticResource ProgressBarBaseStyle}"
                                                 VerticalAlignment="Stretch"
                                                 Margin="5,3">
                                        <ProgressBar.Visibility>
                                            <MultiBinding Converter="{StaticResource MultiVisibilityConverter}">
                                                <Binding Path="HasError" Converter="{StaticResource BoolToInvisibilityConverter}"/>
                                                <Binding Path="Status" Converter="{StaticResource EncodingJobStatusToVisibilityConverter}"/>
                                                <Binding Path="Complete" Converter="{StaticResource BoolToInvisibilityConverter}"/>
                                            </MultiBinding>
                                        </ProgressBar.Visibility>
                                    </ProgressBar>
                                    <icon:PackIconMaterialDesign x:Name="StatusIcon"
                                                                 Grid.Row="2"
                                                                 Style="{StaticResource EncodingJobQueueItemIconStyle}">
                                        <icon:PackIconMaterialDesign.RenderTransform>
                                            <RotateTransform Angle="0" CenterX="0" CenterY="0"/>
                                        </icon:PackIconMaterialDesign.RenderTransform>
                                    </icon:PackIconMaterialDesign>
                                </Grid>
                            </Grid>
                        </Border>
                    </Border>

                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding HasError}" Value="False"/>
                                <Condition Binding="{Binding Complete}" Value="False"/>
                                <Condition Binding="{Binding Paused}" Value="False"/>
                                <Condition Binding="{Binding Status}" Value="{x:Static utilEnum:EncodingJobStatus.BUILDING}"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Name="StatusImageRotateStoryboard">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                         Storyboard.TargetName="StatusIcon"
                                                         From="0"
                                                         To="360"
                                                         Duration="0:0:3"
                                                         RepeatBehavior="Forever"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="StatusImageRotateStoryboard"/>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding HasError}" Value="True"/>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
                                    Value="{StaticResource ErrorBackgroundBrush}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding HasError}" Value="True"/>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
                                    Value="{StaticResource ErrorMouseOverBackgroundBrush}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding HasError}" Value="False"/>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
                                    Value="{StaticResource PressedBrush}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding HasError}" Value="False"/>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
                                    Value="{StaticResource MouseOverBrush}"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>